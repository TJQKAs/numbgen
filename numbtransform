def englishNumber number
  if number < 0  # No negative numbers.
    return 'Please enter a number that isn\'t negative.'
  end
  if number == 0
  return 'zero'
  end
  numString = " "
if number > 99 

  bignums =  [[1e12.to_i, "trillion"], [1e9.to_i, "billion"], [1e6.to_i, "million"],
  [1e3.to_i, "thousand"], [1e2.to_i, "hundred"]
  ]
  left = number
  # No more special cases! No more returns!
  bignums.each do | bignum |
  if   
  left/bignum[0]>0
  write = left / bignum[0]
  left = left - write*bignum[0]
  numString = numString + englishNumber(write) + " " + bignum[1]
  if left > 0
  numString = numString + ' ' + englishNumber(left)
  left = 0
end
end
end
else
numString = numString + smNumb(number)
end
numString
end
def smNumb number

  numString = " "

  onesPlace = ['one',     'two',       'three',    'four',     'five',
               'six',     'seven',     'eight',    'nine']
  tensPlace = ['ten',     'twenty',    'thirty',   'forty',    'fifty',
               'sixty',   'seventy',   'eighty',   'ninety']
  teenagers = ['eleven',  'twelve',    'thirteen', 'fourteen', 'fifteen',
               'sixteen', 'seventeen', 'eighteen', 'nineteen']

  # "left" is how much of the number we still have left to write out.
  # "write" is the part we are writing out right now.
  # write and left... get it?  :)
  left  = number
  write = left/10          # How many hundreds left to write out?
  left  = left - write*10  # Subtract off those hundreds.
  if write > 0
    if ((write == 1) and (left > 0))
      # Since we can't write "tenty-two" instead of "twelve",
      # we have to make a special exception for these.
      numString = numString + teenagers[left-1]
      # The "-1" is because teenagers[3] is 'fourteen', not 'thirteen'.
      # Since we took care of the digit in the ones place already,
      # we have nothing left to write.
      left = 0
    else
      numString = numString + tensPlace[write-1]
      # The "-1" is because tensPlace[3] is 'forty', not 'thirty'.
    end
    if left > 0
      # So we don't write 'sixtyfour'...
      numString = numString + '-'
    end
  end
  write = left  # How many ones left to write out?
  left  = 0     # Subtract off those ones.
  if write > 0
    numString = numString + onesPlace[write-1]
    # The "-1" is because onesPlace[3] is 'four', not 'three'.
  end
  # Now we just return "numString"...
  numString
end

# this is my modification #
puts "Open file where we can save your numbers"
filename = gets.chomp 
puts "Opening the file #{filename}"
text = open(filename, 'w')
text.truncate(0)
puts "if you want to put numbers by yourself just put - yes, if not  - no "
way = gets.chomp
if way == "no"
puts "how many numbers do you want to get?"  
way1 = gets.chomp.to_i
i = 0
while i < way1 
vr1 = rand(1000000000000)    
var1 = vr1.to_i  
puts " This is: " +  englishNumber(var1)
text.write(englishNumber(var1))
text.write("\n")
i = i + 1 
end
else
puts "Please enter your number or press no for exit"
vr1 = gets.chomp
while vr1 != "no"
var1 = vr1.to_i  
puts " This is: " +  englishNumber(var1)
text.write(englishNumber(var1))
text.write("\n")
puts "Please enter your number again or press no for exit"
vr1 = gets.chomp
end
end
text.close
puts "File closed"

# this is modificatiom of the one of the examples from Chris Pine's tutorial  chapter 8 "Writing Your Own Methods"
# in this program you can input some numbers or you can do it by rnd-function, and the program writes it to the text file
# as the words. 

